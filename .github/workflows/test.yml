name: Python package

on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        python-version:
          - 3.7
          - 3.9
          - '3.10'
          - '3.11'
          - '3.12'
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        exclude:  # Apple Silicon ARM64 does not support Python < v3.8
          - python-version: "3.7"
            platform: macos-latest
        include:  # So run those legacy versions on Intel CPUs
          - python-version: "3.7"
            platform: macos-13
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - run: curl -LsSf https://astral.sh/uv/install.sh | sh
      if: matrix.platform != 'windows-latest'
    - run: powershell -c "irm https://astral.sh/uv/install.ps1 | iex"
      if: matrix.platform == 'windows-latest'
    - run: uv pip install --system .[test] coverage
    - name: Test
      run: |
        python -m coverage run -p --source=./dpdispatcher -m unittest -v
        python -m coverage run -p --source=./dpdispatcher -m dpdispatcher -h
        python -m coverage combine
        python -m coverage report
    - uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  pass:
    needs: [test]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
