[build-system]
requires = ["setuptools>=61", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "dpdispatcher"
dynamic = ["version"]
description = "Generate HPC scheduler systems jobs input scripts, submit these scripts to HPC systems, and poke until they finish"
authors = [
    { name = "DeepModeling" },
]
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
]
dependencies = [
    'paramiko',
    'dargs>=0.2.9',
    'requests',
    'tqdm>=4.9.0',
    'typing_extensions; python_version < "3.7"',
]
requires-python = ">=3.7"
readme = "README.md"
keywords = ["dispatcher", "hpc", "slurm", "lsf", "pbs", "ssh"]

[project.urls]
Homepage = "https://github.com/deepmodeling/dpdispatcher"
documentation = "https://docs.deepmodeling.com/projects/dpdispatcher"
repository = "https://github.com/deepmodeling/dpdispatcher"

[project.scripts]
dpdisp = "dpdispatcher.dpdisp:main"

[project.entry-points."dpgui"]
"DPDispatcher Machine" = "dpdispatcher.arginfo:machine_dargs"
"DPDispatcher Resources" = "dpdispatcher.arginfo:resources_dargs"
"DPDispatcher Task" = "dpdispatcher.arginfo:task_dargs"

[project.optional-dependencies]
docs = [
    'sphinx',
    'myst-parser',
    'sphinx_rtd_theme>=1.0.0rc1',
    'numpydoc',
    'deepmodeling_sphinx>=0.1.1',
    'dargs>=0.3.1',
    'sphinx-argparse',
]
cloudserver = ["oss2", "tqdm", "bohrium-sdk"]
bohrium = ["oss2", "tqdm", "bohrium-sdk"]
gui = [
    "dpgui",
]
test = [
    "dpgui",
]

[tool.setuptools.packages.find]
include = ["dpdispatcher*"]

[tool.setuptools_scm]
write_to = "dpdispatcher/_version.py"

[tool.pyright]
include = ['dpdispatcher']
exclude = [
    'dpdispatcher/dpcloudserver/temp_test.py',
    'dpdispatcher/_version.py',
]

[tool.isort]
profile = "black"

[tool.ruff]
target-version = "py37"
select = [
    "E", # errors
    "F", # pyflakes
    "D", # pydocstyle
    "UP", # pyupgrade
    "I", # isort
]
ignore = [
    "E501", # line too long
    "F841", # local variable is assigned to but never used
    "E741", # ambiguous variable name
    "E402", # module level import not at top of file
    "D413", # missing blank line after last section
    "D416", # section name should end with a colon
    "D203", # 1 blank line required before class docstring
    "D107", # missing docstring in __init__
    "D213", # multi-line docstring summary should start at the second line
    "D100", # TODO: missing docstring in public module
    "D101", # TODO: missing docstring in public class
    "D102", # TODO: missing docstring in public method
    "D103", # TODO: missing docstring in public function
    "D104", # TODO: missing docstring in public package
    "D105", # TODO: missing docstring in magic method
    "D205", # 1 blank line required between summary line and description
    "D401", # TODO: first line should be in imperative mood
    "D404", # TODO: first word of the docstring should not be This
]
ignore-init-module-imports = true
